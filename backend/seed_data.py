from app import app, db
from models import User, Course, Lesson, Material, Comment, Rating
from werkzeug.security import generate_password_hash
from datetime import datetime, timedelta
import random

def seed_database():
    """Popular o banco de dados com dados de exemplo"""
    
    with app.app_context():
        # Limpar dados existentes (cuidado em produ√ß√£o!)
        db.drop_all()
        db.create_all()
        
        print("üå± Iniciando popula√ß√£o do banco de dados...")
        
        # ==================== USU√ÅRIOS ====================
        users_data = [
            {
                'name': 'Administrador',
                'email': 'admin@cursohub.com',
                'password': 'admin123',
                'role': 'admin',
                'bio': 'Administrador da plataforma CursoHub'
            },
            {
                'name': 'Prof. Jo√£o Silva',
                'email': 'joao@cursohub.com',
                'password': 'professor123',
                'role': 'teacher',
                'bio': 'Professor de Matem√°tica com 15 anos de experi√™ncia. Especialista em ensino fundamental e m√©dio.'
            },
            {
                'name': 'Prof. Maria Santos',
                'email': 'maria@cursohub.com',
                'password': 'professor123',
                'role': 'teacher',
                'bio': 'Professora de F√≠sica e Qu√≠mica. Doutora em Ci√™ncias pela USP.'
            },
            {
                'name': 'Prof. Carlos Oliveira',
                'email': 'carlos@cursohub.com',
                'password': 'professor123',
                'role': 'teacher',
                'bio': 'Professor de Programa√ß√£o e Desenvolvimento Web. Full Stack Developer h√° 10 anos.'
            },
            {
                'name': 'Ana Costa',
                'email': 'ana@email.com',
                'password': 'aluno123',
                'role': 'student',
                'bio': 'Estudante de Engenharia apaixonada por matem√°tica e programa√ß√£o.'
            },
            {
                'name': 'Pedro Mendes',
                'email': 'pedro@email.com',
                'password': 'aluno123',
                'role': 'student',
                'bio': 'Estudante do ensino m√©dio com interesse em ci√™ncias exatas.'
            },
            {
                'name': 'Julia Ferreira',
                'email': 'julia@email.com',
                'password': 'aluno123',
                'role': 'student',
                'bio': 'Estudante de Design interessada em desenvolvimento web.'
            }
        ]
        
        users = []
        for user_data in users_data:
            user = User(
                name=user_data['name'],
                email=user_data['email'],
                password=generate_password_hash(user_data['password']),
                role=user_data['role'],
                bio=user_data['bio']
            )
            users.append(user)
            db.session.add(user)
        
        db.session.commit()
        print(f"‚úÖ Criados {len(users)} usu√°rios")
        
        # ==================== CURSOS ====================
        # Buscar professores
        joao = User.query.filter_by(email='joao@cursohub.com').first()
        maria = User.query.filter_by(email='maria@cursohub.com').first()
        carlos = User.query.filter_by(email='carlos@cursohub.com').first()
        
        courses_data = [
            {
                'title': 'Matem√°tica B√°sica - Fundamentos',
                'description': 'Curso completo de matem√°tica b√°sica cobrindo aritm√©tica, √°lgebra b√°sica, geometria e estat√≠stica fundamental. Ideal para estudantes do ensino fundamental e m√©dio que querem refor√ßar sua base matem√°tica.',
                'category': 'Matem√°tica',
                'level': 'beginner',
                'price': 0.0,
                'creator': joao,
                'is_published': True,
                'is_featured': True
            },
            {
                'title': 'F√≠sica Aplicada - Mec√¢nica',
                'description': 'Estudo completo da mec√¢nica cl√°ssica incluindo cinem√°tica, din√¢mica, trabalho e energia. Com exerc√≠cios pr√°ticos e simula√ß√µes.',
                'category': 'F√≠sica',
                'level': 'intermediate',
                'price': 49.90,
                'creator': maria,
                'is_published': True,
                'is_featured': True
            },
            {
                'title': 'Qu√≠mica Org√¢nica Essencial',
                'description': 'Introdu√ß√£o √† qu√≠mica org√¢nica com foco em estruturas moleculares, nomenclatura e rea√ß√µes qu√≠micas b√°sicas.',
                'category': 'Qu√≠mica',
                'level': 'intermediate',
                'price': 39.90,
                'creator': maria,
                'is_published': True
            },
            {
                'title': 'Desenvolvimento Web Completo',
                'description': 'Aprenda a criar sites e aplica√ß√µes web do zero usando HTML, CSS, JavaScript, e frameworks modernos como React.',
                'category': 'Programa√ß√£o',
                'level': 'beginner',
                'price': 99.90,
                'creator': carlos,
                'is_published': True,
                'is_featured': True
            },
            {
                'title': 'Python para Iniciantes',
                'description': 'Curso introdut√≥rio de programa√ß√£o em Python cobrindo sintaxe b√°sica, estruturas de dados e programa√ß√£o orientada a objetos.',
                'category': 'Programa√ß√£o',
                'level': 'beginner',
                'price': 79.90,
                'creator': carlos,
                'is_published': True
            },
            {
                'title': '√Ålgebra Linear Avan√ßada',
                'description': 'Curso avan√ßado de √°lgebra linear para estudantes de engenharia e ci√™ncias exatas.',
                'category': 'Matem√°tica',
                'level': 'advanced',
                'price': 69.90,
                'creator': joao,
                'is_published': False  # Curso em desenvolvimento
            }
        ]
        
        courses = []
        for course_data in courses_data:
            course = Course(
                title=course_data['title'],
                description=course_data['description'],
                category=course_data['category'],
                level=course_data['level'],
                price=course_data['price'],
                creator_id=course_data['creator'].id,
                is_published=course_data['is_published'],
                is_featured=course_data.get('is_featured', False),
                created_at=datetime.utcnow() - timedelta(days=random.randint(1, 30))
            )
            
            if course_data['is_published']:
                course.published_at = course.created_at + timedelta(days=1)
            
            courses.append(course)
            db.session.add(course)
        
        db.session.commit()
        print(f"‚úÖ Criados {len(courses)} cursos")
        
        # ==================== AULAS ====================
        lessons_data = {
            'Matem√°tica B√°sica - Fundamentos': [
                {'title': 'Introdu√ß√£o aos N√∫meros', 'description': 'Conceitos b√°sicos sobre n√∫meros naturais, inteiros e racionais', 'video_duration': 900, 'is_free': True},
                {'title': 'Opera√ß√µes B√°sicas', 'description': 'Adi√ß√£o, subtra√ß√£o, multiplica√ß√£o e divis√£o', 'video_duration': 1200, 'is_free': True},
                {'title': 'Fra√ß√µes e N√∫meros Decimais', 'description': 'Como trabalhar com fra√ß√µes e converter para decimais', 'video_duration': 1500},
                {'title': 'Porcentagem', 'description': 'C√°lculos percentuais e aplica√ß√µes pr√°ticas', 'video_duration': 1000},
                {'title': 'Equa√ß√µes do 1¬∫ Grau', 'description': 'Resolu√ß√£o de equa√ß√µes lineares', 'video_duration': 1800}
            ],
            'F√≠sica Aplicada - Mec√¢nica': [
                {'title': 'Introdu√ß√£o √† Mec√¢nica', 'description': 'Conceitos fundamentais de movimento e for√ßa', 'video_duration': 1200, 'is_free': True},
                {'title': 'Cinem√°tica Escalar', 'description': 'Estudo do movimento em uma dimens√£o', 'video_duration': 1800},
                {'title': 'Cinem√°tica Vetorial', 'description': 'Movimento em duas e tr√™s dimens√µes', 'video_duration': 2100},
                {'title': 'Leis de Newton', 'description': 'As tr√™s leis fundamentais da mec√¢nica', 'video_duration': 1500},
                {'title': 'Trabalho e Energia', 'description': 'Conceitos de trabalho, energia cin√©tica e potencial', 'video_duration': 1900}
            ],
            'Desenvolvimento Web Completo': [
                {'title': 'Introdu√ß√£o ao Desenvolvimento Web', 'description': 'Vis√£o geral das tecnologias web', 'video_duration': 800, 'is_free': True},
                {'title': 'HTML Fundamentals', 'description': 'Estrutura b√°sica de p√°ginas web', 'video_duration': 1500, 'is_free': True},
                {'title': 'CSS Styling', 'description': 'Estiliza√ß√£o e layout com CSS', 'video_duration': 2000},
                {'title': 'JavaScript Basics', 'description': 'Programa√ß√£o client-side com JavaScript', 'video_duration': 2400},
                {'title': 'React Introduction', 'description': 'Introdu√ß√£o ao framework React', 'video_duration': 1800},
                {'title': 'Building Your First App', 'description': 'Criando uma aplica√ß√£o web completa', 'video_duration': 3000}
            ]
        }
        
        lesson_count = 0
        for course in courses:
            if course.title in lessons_data:
                for i, lesson_data in enumerate(lessons_data[course.title]):
                    lesson = Lesson(
                        title=lesson_data['title'],
                        description=lesson_data['description'],
                        content=f"Conte√∫do detalhado da aula: {lesson_data['title']}. Este √© um exemplo de conte√∫do texto que acompanha o v√≠deo da aula.",
                        video_url=f"https://www.youtube.com/embed/dQw4w9WgXcQ?t={random.randint(1, 100)}",
                        video_duration=lesson_data['video_duration'],
                        order_index=i + 1,
                        course_id=course.id,
                        is_free=lesson_data.get('is_free', False)
                    )
                    db.session.add(lesson)
                    lesson_count += 1
        
        db.session.commit()
        print(f"‚úÖ Criadas {lesson_count} aulas")
        
        # ==================== MATR√çCULAS ====================
        # Matricular alguns alunos nos cursos
        students = User.query.filter_by(role='student').all()
        published_courses = Course.query.filter_by(is_published=True).all()
        
        enrollments = 0
        for student in students:
            # Cada aluno se matricula em 2-4 cursos aleat√≥rios
            num_courses = random.randint(2, min(4, len(published_courses)))
            selected_courses = random.sample(published_courses, num_courses)
            
            for course in selected_courses:
                if course not in student.enrolled_courses:
                    student.enrolled_courses.append(course)
                    enrollments += 1
        
        db.session.commit()
        print(f"‚úÖ Criadas {enrollments} matr√≠culas")
        
        # ==================== COMENT√ÅRIOS ====================
        comments_data = [
            "Excelente curso! Muito did√°tico e bem explicado.",
            "Professor, poderia dar mais exemplos pr√°ticos?",
            "√ìtima qualidade de v√≠deo e √°udio. Parab√©ns!",
            "Conte√∫do muito bom, mas gostaria de exerc√≠cios mais desafiadores.",
            "Curso essencial para quem est√° come√ßando. Recomendo!",
            "As explica√ß√µes s√£o claras e f√°ceis de entender.",
            "Poderia ter mais materiais complementares?",
            "Estou aprendendo muito! Obrigado professor.",
        ]
        
        comment_count = 0
        for course in published_courses[:3]:  # Coment√°rios nos primeiros 3 cursos
            for student in students:
                if random.random() < 0.6:  # 60% chance de comentar
                    comment = Comment(
                        content=random.choice(comments_data),
                        course_id=course.id,
                        author_id=student.id,
                        created_at=datetime.utcnow() - timedelta(days=random.randint(1, 15))
                    )
                    db.session.add(comment)
                    comment_count += 1
        
        db.session.commit()
        print(f"‚úÖ Criados {comment_count} coment√°rios")
        
        # ==================== AVALIA√á√ïES ====================
        rating_count = 0
        for course in published_courses:
            for student in students:
                if course in student.enrolled_courses and random.random() < 0.7:  # 70% chance de avaliar
                    rating = Rating(
                        rating=random.randint(3, 5),  # Notas entre 3 e 5
                        comment=random.choice([
                            "Curso muito bom!",
                            "Recomendo para todos.",
                            "Excelente conte√∫do.",
                            "Professor muito did√°tico.",
                            "Aprendi muito!",
                            ""
                        ]),
                        course_id=course.id,
                        author_id=student.id
                    )
                    db.session.add(rating)
                    rating_count += 1
        
        db.session.commit()
        print(f"‚úÖ Criadas {rating_count} avalia√ß√µes")
        
        # ==================== RESUMO ====================
        print("\nüéâ Banco de dados populado com sucesso!")
        print(f"üìä Resumo:")
        print(f"   ‚Ä¢ {len(users)} usu√°rios")
        print(f"   ‚Ä¢ {len(courses)} cursos")
        print(f"   ‚Ä¢ {lesson_count} aulas")
        print(f"   ‚Ä¢ {enrollments} matr√≠culas")
        print(f"   ‚Ä¢ {comment_count} coment√°rios")
        print(f"   ‚Ä¢ {rating_count} avalia√ß√µes")
        
        print("\nüë§ Usu√°rios de teste:")
        print("   ‚Ä¢ Admin: admin@cursohub.com / admin123")
        print("   ‚Ä¢ Professor: joao@cursohub.com / professor123")
        print("   ‚Ä¢ Professor: maria@cursohub.com / professor123")
        print("   ‚Ä¢ Professor: carlos@cursohub.com / professor123")
        print("   ‚Ä¢ Aluno: ana@email.com / aluno123")
        print("   ‚Ä¢ Aluno: pedro@email.com / aluno123")
        print("   ‚Ä¢ Aluno: julia@email.com / aluno123")

if __name__ == '__main__':
    seed_database()